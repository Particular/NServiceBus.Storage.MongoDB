name: CI
on:
  push:
    branches:
      - master
      - release-*
  pull_request:
  workflow_dispatch:
env:
  DOTNET_NOLOGO: true
jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-2019
            name: Windows
          - os: ubuntu-20.04
            name: Linux
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v2.1.0
        with:
          dotnet-version: 6.0.x
      - name: Build
        run: dotnet build src --configuration Release
      - name: Upload packages
        if: matrix.name == 'Windows'
        uses: actions/upload-artifact@v3.1.0
        with:
          name: NuGet packages
          path: nugets/
          retention-days: 7
      - name: Setup MongoDB server (Windows)
        if: matrix.name == 'Windows'
        shell: pwsh
        run: |
          mkdir D:\temp\nservicebus-mongodb
          mkdir D:\temp\nservicebus-mongodb\data
          mkdir D:\temp\nservicebus-mongodb\logs
          # We need a MongoDB server started with a replica set configuration:
          mongod --dbpath D:\temp\nservicebus-mongodb\data --logpath D:\temp\nservicebus-mongodb\logs\logs.txt --replSet tr0 --bind_ip 127.0.0.1 --install --serviceName NServiceBusMongoDB --serviceDisplayName NServiceBusMongoDB
          net start NServiceBusMongoDB
          mongo --eval 'rs.initiate()'    
      - name: Setup MongoDB server (Linux)
        if: matrix.name == 'Linux'
        uses: supercharge/mongodb-github-action@1.7.0
        with:
          mongodb-replica-set: tr0
      - name: Run tests
        uses: Particular/run-tests-action@v1.3.0
