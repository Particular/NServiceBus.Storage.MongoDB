[assembly: System.Runtime.CompilerServices.InternalsVisibleToAttribute("NServiceBus.Storage.MongoDB.Tests")]
namespace NServiceBus
{
    public class CompatibilitySettings : NServiceBus.Configuration.AdvancedExtensibility.ExposeSettings
    {
        public NServiceBus.CompatibilitySettings CollectionNamingConvention(System.Func<System.Type, string> collectionNamingConvention) { }
        public NServiceBus.CompatibilitySettings VersionElementName(string versionElementName) { }
    }
    public class MongoPersistence : NServiceBus.Persistence.PersistenceDefinition
    {
        public MongoPersistence() { }
    }
    public class static MongoSettingsExtensions
    {
        public static NServiceBus.CompatibilitySettings CommunityPersistenceCompatibility(this NServiceBus.PersistenceExtensions<NServiceBus.MongoPersistence> persistenceExtensions) { }
        public static NServiceBus.PersistenceExtensions<NServiceBus.MongoPersistence> DatabaseName(this NServiceBus.PersistenceExtensions<NServiceBus.MongoPersistence> persistenceExtensions, string databaseName) { }
        public static NServiceBus.PersistenceExtensions<NServiceBus.MongoPersistence> MongoClient(this NServiceBus.PersistenceExtensions<NServiceBus.MongoPersistence> persistenceExtensions, MongoDB.Driver.IMongoClient mongoClient) { }
        public static NServiceBus.PersistenceExtensions<NServiceBus.MongoPersistence> TimeToKeepOutboxDeduplicationData(this NServiceBus.PersistenceExtensions<NServiceBus.MongoPersistence> persistenceExtensions, System.TimeSpan timeToKeepOutboxDeduplicationData) { }
        public static NServiceBus.PersistenceExtensions<NServiceBus.MongoPersistence> UseOptimisticConcurrency(this NServiceBus.PersistenceExtensions<NServiceBus.MongoPersistence> persistenceExtensions) { }
        public static NServiceBus.PersistenceExtensions<NServiceBus.MongoPersistence> UseTransactions(this NServiceBus.PersistenceExtensions<NServiceBus.MongoPersistence> persistenceExtensions, bool useTransactions) { }
    }
    public class static SynchronizedStorageSessionExtensions
    {
        public static MongoDB.Driver.IClientSessionHandle GetClientSession(this NServiceBus.Persistence.SynchronizedStorageSession session) { }
    }
}
namespace NServiceBus.Testing
{
    public class TestableMongoSynchronizedStorageSession : NServiceBus.Persistence.SynchronizedStorageSession
    {
        public TestableMongoSynchronizedStorageSession(MongoDB.Driver.IClientSessionHandle clientSessionHandle) { }
        public MongoDB.Driver.IClientSessionHandle MongoSession { get; }
    }
}